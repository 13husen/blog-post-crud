spring.application.name=backend-java
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.consumer.group-id=blog-group
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.elasticsearch.uris=http://localhost:9200
spring.elasticsearch.connection-timeout=5s
spring.elasticsearch.socket-timeout=3s
# Jika pakai versi Elasticsearch 8 ke atas dan kamu matikan security di Docker, ini cukup
server.port=8080


# Konfigurasi JPA dan DataSource
spring.datasource.url=jdbc:postgresql://localhost:5432/simple_app
spring.datasource.username=postgres
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate Dialect untuk PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# DDL auto (bisa diubah tergantung kebutuhan, misalnya untuk dev)
spring.jpa.hibernate.ddl-auto=update
# Show SQL (untuk debugging)
spring.jpa.show-sql=true

# Format SQL untuk kemudahan debugging
spring.jpa.properties.hibernate.format_sql=true